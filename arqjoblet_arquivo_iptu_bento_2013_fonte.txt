//Revisado em: 24/01/2012 - Emerson Barrufi Fernandes
//Revisado em: 30/01/2013 - Carlos Eduardo Duarte Schwalm

Alfa @gaConexao, @gaCaminho, @gaContrib, @gaOrdem, @gaRegistro, @gaEndContrib, @gaEngloba,@gaImovel,@gaIsentos,@gaCidade, @gaUnica;
Inteiro  @giConvenio,@giQtdReg;
Alfa laSelect, laSelectCount, laEngloba, laNomeArq, laOrdem, laCampo1, laCampo2, laCampo3, laCampo4, laCampo5, laCampo6, laCampo7, laCidade, CompNome;
Alfa laNome, laCorr, laRuaCon, laNumCon, laCompCon, laBaiCon, laCidCon, laEstado, laCepCon, laBloCon, laAptoCon, laTipoEnd, laTipoEndImo;
Alfa laRuaImo, laNumImo, laCompImo, laBloImo, laAptoImo, laBaiImo, laCepImo, laQuadra, laLote, laTipRuaCon, laTipRuaImo, laTipRuaEnt;
Alfa laInscricao, laRuaEnt, laBaiEnt, laCepEnt, laNumEnt, laEstEnt, laCidEnt, laCompEnt, laRuaImovel, laBloEnt, laLoteamento;
Alfa laDesc, laDesc1, laUnica, laBarra, laRepNum, laDescReceita, laAnos, laAptoEnt, laIsento, laNomeParc, laInscAnt;
Alfa laCidEntidade, laUFEnt, laCaminho, laRegAux, laTipoMens, laHeaderArquivo,laMensagem, laEnglobados, laNumBaixa, Deve,laAcordos,laImoveis_acordos;
Inteiro liRetorno, liRetornoCount, liConfig, liMoeda, liNumCarne, liAno, liAgencia, liReceita, liCedente, liNumUni, liNumPar, i, j, c;
Inteiro liNumImo, liImo, liUnidade, liLoteamento, liPessoa, liEngloba, liCarne, liItemBci, liItem, liDebito, liParcela, contaSubRec;
Inteiro liSubReceita, liMoeOrig, liNumBaixa, liMaxRec, liCorresp, liLancto,liVersaoApp, liQtdeParc,liAcordo2;
Data ldData, ldVcto;
Numerico lnValorBci, lnValorGer, lnValorGerAcu, lnValorDesc, lnTotGerado, lnTotGeradoD, lnTotGeradoMenosDesc, lnTotGeradoDesc;
Inteiro NumBaixa1, NumBaixa2, NumBaixa3, NumBaixa4, NumBaixa5, NumBaixa6, NumBaixa7;

@gaConexao    = alfa(retParametro('conexao', true, ''));
@giConvenio   = retParametro('Convênio', true, '');
@gaCidade     = alfa(retParametro('Gerar endereços de', true, 'cb:1 - Bento Gonçalves,2 - Outras Cidades,3 - Entrega pela Prefeitura'));

se verParametro('caminho') == true
    @gaCaminho = alfa(retParametro('Caminho', false, 'OF:dir'));
fimse;

@gaUnica  = alfa(retParametro('Parcelas', true, 'cb:1 - Únicas,2 - Não Únicas,3 - Todas'));

se verParametro('Contribuinte') == true
    @gaContrib = alfa(retParametro('Contribuinte', false, ''));
senao
    @gaContrib = '';
fimse;

se verParametro('Imóvel') == true
    @gaImovel = alfa(retParametro('Imóvel', false, ''));
senao
    @gaImovel = '';
fimse;

/*se verParametro('Ordem') == true
    @gaOrdem = alfa(retParametro('Ordem', false, 'cb:1 - Código do Contribuinte,2 - Código do Imóvel,3 - Alfabética'));
fimse;*/

/*se verParametro('Endereço') == true
    @gaEndContrib = alfa(retParametro('Endereço', false, 'cb:1 - da Pessoa,2 - de Correspondência'));
fimse;*/

se verParametro('Número de Registros por Arquivo') == true
    @giQtdReg = retParametro('Número de Registros por Arquivo', false, '');
fimse;

//teste para gravacao
se @giQtdReg == 0
    @giQtdReg = 99999999;
fimse;

laSelect = "select nome, (select sigla from bethadba.estados where estados.i_estados = cidades.i_estados) from bethadba.entidades key join bethadba.cidades";
liRetorno = consulta(@gaConexao, 'Entidades', laSelect);
se liRetorno < 1 || ! consProxima('Entidades')
    mensagem('consulta', liRetorno, 'finaliza',1);
senao
    laCidEntidade = consDados('Entidades', 1);
    laUFEnt       = consDados('Entidades', 2);
fimse;


//Consulta configuracao do debito, ano, nome e sequencia do arquivo para este convenio
laSelect = "select isnull(config_lancto,0), isnull(sequencia,0), isnull(nome_arq,''), isnull(exercicio,0), (select i_versoes_app from bethadba.versoes_app where i_sistema = 301) 
            from bethadba.convenios_bancarios where i_convenios = " +@giConvenio;
liRetorno = consulta(@gaConexao, 'Convenio', laSelect);

se liRetorno < 1 
    mensagem('consulta', liRetorno, 'finaliza',1);
senao
    se consProxima('Convenio')
        liConfig = consDados('Convenio', 1);
        liNumCarne = consDados('Convenio', 2);
        laNomeArq = consDados('Convenio', 3);
        liAno = consDados('Convenio', 4);
        liVersaoApp = consDados('Convenio', 5);
    fimse;
fimse;

//Define se deve ser gerado os imóveis com endereço de entrega Bento Gonçalves, Outras Cidades ou que serão entregues pela Prefeitura
se @gaCidade == '1 - Bento Gonçalves'
    CompNome = 'Bento Gonçalves';
    laCidade = " cidade like 'Bento%Gonçalves%' and isnull(dbf_fc_existe_opc_bci(imoveis.i_imoveis,25500,"+liAno+"),0) not in (25502) ";
senao
  se @gaCidade == '2 - Outras Cidades'
    CompNome = 'Outras Cidades';
    laCidade = " cidade not like 'Bento%Gonçalves%' and isnull(dbf_fc_existe_opc_bci(imoveis.i_imoveis,25500,"+liAno+"),0) not in (25502) ";    
  senao
    se @gaCidade == '3 - Entrega pela Prefeitura' 
      CompNome = 'Entrega Prefeitura';
      laCidade = " isnull(dbf_fc_existe_opc_bci(imoveis.i_imoveis,25500,"+liAno+"),0) in (25502) ";
    fimse;
  fimse;  
fimse;


liNumCarne++;
laCaminho = @gaCaminho;
@gaCaminho = maiusculo(laCaminho + '\' + retira(laNomeArq) + '-' + /*subAlfa(alfa(1000 + liNumCarne),1,3)*/ CompNome + '.' + 'txt');
escreveArquivo(@gaCaminho,'', true);        
mostraln('Gerando arquivo...');
mostraln(@gaCaminho);

Alfa sqldthora;
DataHora dthora;
sqldthora = 'select now() from dummy';
consulta(@gaConexao, 'Agora', sqldthora);
mostraln('Processamento iniciado: ' + formata(consDados('Agora', 1), 'dd/MM/yyyy hh:mm:ss'));
consFecha('Agora');

//Consulta agencia, receita e cedente deste convenio
laSelect = "select isnull(i_agencias,0), isnull(i_receitas,0), isnull(cedente,'') from bethadba.conta_corrente 
            where i_convenios = " +@giConvenio;
liRetorno = consulta(@gaConexao, 'Corrente', laSelect);
se liRetorno < 1 
    mensagem('consulta', liRetorno, 'finaliza',1);
senao
    se consProxima('Corrente')
        liAgencia = consDados('Corrente', 1);        
        liReceita = consDados('Corrente', 2);                
        liCedente = consDados('Corrente', 3);                        
    fimse;
fimse;
consFecha('Corrente');            

//Consulta a moeda corrente do sistema
laSelect = "select i_moedas from bethadba.moedas where corrente = 'S' ";
liRetorno = consulta(@gaConexao, 'Moeda', laSelect);
se liRetorno < 1 
    mensagem('consulta', liRetorno, 'finaliza',1);
senao
    se consProxima('Moeda')
        liMoeda = consDados('Moeda', 1);        
    fimse;
fimse;
consFecha('Moeda');


//Pega total de Parcelas Unicas
laSelect = " select count() from bethadba.parcelas where i_receitas = " +liReceita+ " 
             and unica = 'S' and ano = " +liAno;
liRetorno = consulta(@gaConexao, 'TotUni', laSelect);
se liRetorno < 1 
    mensagem('consulta', liRetorno, 'finaliza',1);
senao
    se consProxima('TotUni')
        liNumUni = consDados('TotUni', 1);        
    fimse;
fimse;
consFecha('TotUni');


//Pega total de Parcelas Nao Unicas
laSelect = "select count() from bethadba.parcelas where i_receitas = " +liReceita+ " 
             and unica = 'N' and ano = " +liAno;
liRetorno = consulta(@gaConexao, 'TotPar', laSelect);
se liRetorno < 1 
    mensagem('consulta', liRetorno, 'finaliza',1);
senao
    se consProxima('TotPar')
        liNumPar = consDados('TotPar', 1);        
    fimse;
fimse;
consFecha('TotPar');


//pega a ordem na qual deve ser gerado o arquivo
//DESNECESSÁRIO
/*se ( @gaOrdem == '1 - Código do Contribuinte')
    laOrdem = " order by imoveis.i_pessoas, imoveis.i_imoveis ";
senao
    se ( @gaOrdem == '2 - Código do Imóvel')
        laOrdem = " order by imoveis.i_imoveis, imoveis.i_pessoas ";    
    senao
        laOrdem = " order by 3,2,1 "; // nome, i_pessoas, i_imoveis
    fimse;
fimse;*/

//Seleciona caracteristicas de bci para o imovel
laSelect = "Select isnull(opcao,0) from bethadba.opcoes_convenio where i_convenios = " +@giConvenio+ " order by i_sequencias ";
liRetorno = consulta(@gaConexao, 'Opcoes', laSelect);
se liRetorno < 1 
        mensagem('consulta', liRetorno, 'finaliza',1);
senao
    para i = 1 ate 24
        se consProxima('Opcoes')
            vetor( "Bci", i, consDados('Opcoes',1));
        senao
            vetor( "Bci", i, 0);
        fimse;
    fimpara;
fimse;
consFecha('Opcoes');

//Consulta Sub-Receitas
laSelect = " select i_receitas, left(nome,25) from bethadba.receitas where byte_substr(i_receitas,-3,-4) = 
             byte_substr(" +liReceita+",-3,-4) AND right(i_receitas,2) > 0 and right(i_receitas,2) < 9 ";
liRetorno = consulta(@gaConexao, 'Receitas', laSelect);
se liRetorno < 1 
        mensagem('consulta', liRetorno, 'finaliza',1);
senao
    i = 0;
    enquanto consProxima('Receitas')
        i++;
        vetor( "CodRec", i, consDados('Receitas',1));
        vetor( "NomeRec", i, consDados('Receitas',2));        
    fimenquanto;
fimse;
consFecha('Receitas');             

//Consulta Imoveis
liNumImo = 0; // Número de imóveis selecionados

laSelect = "select  i_imoveis, 
                    i_pessoas, 
                    (select nome from bethadba.pessoas where pessoas.i_pessoas = imoveis.i_pessoas) as nome_pessoa, 
                    corr = isnull((select nome from bethadba.pessoas where i_pessoas = imoveis.i_responsavel),''), 
                    rua_imo = trim(isnull((select nome from bethadba.ruas where i_ruas = imoveis.i_ruas),'')),  
                    numero_imo = if imoveis.numero is null or imoveis.numero like '' then 'S/N' else imoveis.numero endif,
                    isnull(imoveis.complemento,''), 
                    isnull(imoveis.bloco,''), 
                    isnull(imoveis.apto,''), 
                    isnull((select nome from bethadba.bairros where i_bairros = imoveis.i_bairros),''), 
                    isnull(imoveis.cep,''), 
                    isnull(imoveis.i_loteamentos,''), 
                    isnull(imoveis.quadra,''),
                    isnull(imoveis.lote,''), 
                    dbf_ret_tipo_rua(imoveis.i_ruas), 
                    isnull(engloba_com,0),
                    dbf_inscricao(imoveis.i_imoveis),
                    (if (exists(select 1 from bethadba.pessoas_enderecos where pessoas_enderecos.i_pessoas = imoveis.i_pessoas and tipo_endereco = 'C') and 
                        end_entrega_iptu = 'C') or 
                        (exists(select 1 from bethadba.pessoas_enderecos where pessoas_enderecos.i_pessoas = imoveis.i_responsavel and tipo_endereco = 'C') and 
                        end_entrega_iptu = 'R') then
                        'C'
                    else
                        if (exists(select 1 from bethadba.pessoas_enderecos where pessoas_enderecos.i_pessoas = imoveis.i_pessoas and tipo_endereco = 'P') and 
                           end_entrega_iptu = 'C') or 
                           (exists(select 1 from bethadba.pessoas_enderecos where pessoas_enderecos.i_pessoas = imoveis.i_responsavel and tipo_endereco = 'P') and 
                           end_entrega_iptu = 'R') then 'P'
                        else
                            if '" + @gaEndContrib + "' = '1 - da Pessoa' then 
                                if exists(select 1 from bethadba.pessoas_enderecos where pessoas_enderecos.i_pessoas = imoveis.i_pessoas and tipo_endereco = 'C') then 
                                    'C' 
                                else
                                    'P'
                                endif
                            endif
                        endif
                    endif),
                    end_entrega_iptu,
                    i_responsavel,
                    isnull((SELECT list(imo.i_imoveis) from bethadba.imoveis as imo where imo.engloba_com = imoveis.i_imoveis and desativado = 'N'),''),
                    cidade = trim(case end_entrega_iptu when 'C' then upper(dbf_ret_endereco_refer(imoveis.i_pessoas,0,0,'P')) when 'R' then upper(dbf_ret_endereco_refer(imoveis.i_responsavel,0,0,'P')) when 'O' then upper((select isnull(nome_cidade, (select cidades.nome from bethadba.cidades where cidades.i_cidades = correspondencias.i_cidades)) from bethadba.correspondencias where correspondencias.i_imoveis = imoveis.i_imoveis)) when 'I' then 'Bento Gonçalves' else 'Bento Gonçalves' end),
                    bairro = trim(case end_entrega_iptu when 'C' then upper(dbf_ret_endereco_refer(imoveis.i_pessoas,0,4,'P')) when 'R' then upper(dbf_ret_endereco_refer(imoveis.i_responsavel,0,4,'P')) when 'O' then upper((select isnull(nome_bairro, (select bairros.nome from bethadba.bairros where bairros.i_bairros = correspondencias.i_bairros)) from bethadba.correspondencias where correspondencias.i_imoveis = imoveis.i_imoveis)) when 'I' then dbf_ret_endereco_refer(imoveis.i_imoveis,1,4,'P') else ' ' end),
                    cep =  trim(case end_entrega_iptu when 'C' then upper(dbf_ret_endereco_refer(imoveis.i_pessoas,0,12,'P')) when 'R' then upper(dbf_ret_endereco_refer(imoveis.i_responsavel,0,12,'P')) when 'O' then upper((select isnull(cep,'95700000') from bethadba.correspondencias where correspondencias.i_imoveis = imoveis.i_imoveis)) when 'I' then dbf_ret_endereco_refer(imoveis.i_imoveis,1, 12, 'P') else '95700000' end),
                    insc_ant,
                    nome_rua_correspondencia = trim(case end_entrega_iptu when 'C' then upper(dbf_ret_endereco_refer(imoveis.i_pessoas,0,2,'P')) when 'R' then upper(dbf_ret_endereco_refer(imoveis.i_responsavel,0,2,'P')) when 'O' then upper((select isnull(nome_rua,(select ruas.nome from bethadba.ruas where ruas.i_ruas = correspondencias.i_ruas)) from bethadba.correspondencias where correspondencias.i_imoveis = imoveis.i_imoveis)) when 'I' then dbf_ret_endereco_refer(imoveis.i_imoveis,1,2,'P') else ' ' end),
                    numero_correspondencia = trim(case end_entrega_iptu when 'C' then upper(dbf_ret_endereco_refer(imoveis.i_pessoas,0,6,'P')) when 'R' then upper(dbf_ret_endereco_refer(imoveis.i_responsavel,0,6,'P')) when 'O' then upper((select isnull(numero,'') from bethadba.correspondencias where correspondencias.i_imoveis = imoveis.i_imoveis)) when 'I' then dbf_ret_endereco_refer(imoveis.i_imoveis,1,6,'P') else ' ' end)
                    
               from bethadba.imoveis
               where " + laCidade + " AND 
               exists(SELECT 1 from bethadba.lanctos key join bethadba.config_lanctos where lanctos.i_receitas = " 
              + liReceita+ " and lanctos.ano = " +liAno+ " and lanctos.i_imoveis = imoveis.i_imoveis and simulado = 'N' and situacao = 'A' and lanctos.i_lancto_prin is null) " + 
              laEngloba;               

se (@gaImovel != '') && (@gaImovel != '0')
    laSelect = geraSelecao(laSelect, 'imoveis.i_imoveis', @gaImovel, 0);
fimse;    
se (@gaContrib != '') && (@gaContrib != '0') 
    laSelect = geraSelecao(laSelect, 'imoveis.i_pessoas', @gaContrib, 0);
fimse;

se (@gaCidade == '1 - Bento Gonçalves') || (@gaCidade == '3 - Entrega pela Prefeitura')
    laOrdem = ' order by nome_pessoa, nome_rua_correspondencia, numero_correspondencia, i_imoveis asc ';
senao
    laOrdem = ' order by cep, nome_pessoa, nome_rua_correspondencia, numero_correspondencia, i_imoveis asc ';
fimse;

laSelect += laOrdem ;

liRetorno = consulta(@gaConexao, 'Imoveis', laSelect);
Inteiro jj;
jj = consNroln('Imoveis');
ativaBarra(jj);
jj = 0;
se liRetorno < 1 
   mensagem('consulta', liRetorno, 'finaliza',1);
senao 
    i = 0;
    enquanto consProxima('Imoveis')
        jj++;
        atualizaBarra(jj);

        liImo        = consDados('Imoveis',01);
        liPessoa     = consDados('Imoveis',02);
        laNome       = consDados('Imoveis',03);
        laCorr       = consDados('Imoveis',04);
        laRuaImo     = consDados('Imoveis',05);
        laNumImo     = consDados('Imoveis',06);
        laCompImo    = consDados('Imoveis',07);
        laBloImo     = consDados('Imoveis',08);
        laAptoImo    = consDados('Imoveis',09);
        laBaiImo     = consDados('Imoveis',10);
        laCepImo     = consDados('Imoveis',11);
        liLoteamento = consDados('Imoveis',12);
        laQuadra     = consDados('Imoveis',13);
        laLote       = consDados('Imoveis',14);
        laTipRuaImo  = consDados('Imoveis',15);
        liEngloba    = consDados('Imoveis',16);
        laInscricao  = consDados('Imoveis',17);
        laTipoEnd    = consDados('Imoveis',18);
        laTipoEndImo = consDados('Imoveis',19);
        liCorresp    = consDados('Imoveis',20);
        laEnglobados = consDados('Imoveis',21);
        laEnglobados = formata(laEnglobados,repete('@',70));
        laInscAnt = consDados('Imoveis',25);
        
        mostraln('Imóvel => ' + alfa(liImo));
                
        Alfa selectcpfcnpj, lacnpj, lacpf;
        selectcpfcnpj = 'select cpf from bethadba.pessoas_fisicas where length(cpf) > 0 and pessoas_fisicas.i_pessoas = ' + liPessoa;
        consulta(@gaConexao, 'CPF', selectcpfcnpj);
        se (consNroln('CPF') > 0)
           lacpf = consDados('CPF', 1);
        fimse;
        consFecha('CPF');
        selectcpfcnpj = 'select cnpj from bethadba.pessoas_juridicas where length(cnpj) > 0 and pessoas_juridicas.i_pessoas = ' + liPessoa;
        consulta(@gaConexao, 'CNPJ', selectcpfcnpj);
        se (consNroln('CNPJ') > 0)
           lacnpj = consDados('CNPJ', 1);
        fimse;
        
        se i >= @giQtdReg 
            i = 0;
            liNumCarne ++;
            @gaCaminho = laCaminho + '\' + laNomeArq + subAlfa(alfa(1000 + liNumCarne),1,3)+ '.' + 'txt';
        fimse;
//      mostraln("Gerando Arquivo " + @gaCaminho + " Imóvel " + liImo );

        se ( @gaEndContrib == '1 - da Pessoa' ) || ((laTipoEndImo != 'O') && (laTipoEndImo != 'I' ))
           laSelect = " select isnull(if pessoas_enderecos.i_ruas is null then 
                                         pessoas_enderecos.nome_rua 
                                      else 
                                         (select nome from bethadba.ruas where i_ruas = pessoas_enderecos.i_ruas) 
                                      endif,''), 
                               isnull(pessoas_enderecos.numero,'S/N'), 
                               isnull(pessoas_enderecos.complemento,''), 
                               isnull(if pessoas_enderecos.i_bairros is null then 
                                         pessoas_enderecos.nome_bairro 
                                      else 
                                         (select nome from bethadba.bairros where i_bairros = pessoas_enderecos.i_bairros) 
                                      endif,''), 
                               isnull(if i_cidades is null then 
                                         pessoas_enderecos.nome_cidade_conv 
                                      else 
                                        (select nome from bethadba.cidades where i_cidades = pessoas_enderecos.i_cidades) 
                                      endif,''), 
                               isnull((if pessoas_enderecos.i_cidades is null then 
                                          ' ' 
                                       else 
                                          (select (select sigla from bethadba.estados where estados.i_estados = cidades.i_estados) from bethadba.cidades where i_cidades = pessoas_enderecos.i_cidades) 
                                       endif),''), 
                               isnull(pessoas_enderecos.cep,''), 
                               isnull(pessoas_enderecos.bloco,''),
                               isnull(pessoas_enderecos.apartamento,''), 
                               dbf_ret_tipo_rua(pessoas_enderecos.i_ruas) 
                        from bethadba.pessoas_enderecos 
                        where pessoas_enderecos.tipo_endereco = '" + laTipoEnd + "' and " ;
           se laTipoEndImo == 'C' || (@gaEndContrib == '1 - da Pessoa' )
               laSelect = laSelect + " pessoas_enderecos.i_pessoas = " + liPessoa;
           senao
               se laTipoEndImo == 'R' 
                  laSelect = laSelect + " pessoas_enderecos.i_pessoas = " + liCorresp;
               fimse;
           fimse;
           liRetorno = consulta(@gaConexao, 'Endereco', laSelect);
           se liRetorno < 1 || ! consProxima('Endereco')
                laRuaEnt    = laRuaImo;
                laNumEnt    = laNumImo;
                laCompEnt   = laCompImo;
                laBaiEnt    = laBaiImo;
                laCidEnt    = laCidEntidade;
                laEstEnt    = laUFEnt;
                laCepEnt    = laCepImo;
                laBloEnt    = laBloImo;
                laAptoEnt   = laAptoImo;
                laTipRuaEnt = laTipRuaImo;

                
           senao
                laRuaEnt    = consDados('Endereco',01);
                laNumEnt    = consDados('Endereco',02);
                laCompEnt   = consDados('Endereco',03);
                laBaiEnt    = consDados('Endereco',04);
                laCidEnt    = consDados('Endereco',05);
                laEstEnt    = consDados('Endereco',06);
                laCepEnt    = consDados('Endereco',07);
                laBloEnt    = consDados('Endereco',08);
                laAptoEnt   = consDados('Endereco',09);
                laTipRuaEnt = consDados('Endereco',10);
                consFecha('Endereco');   
     
           fimse;
        senao
            se laTipoEndImo == 'O' 
                laSelect = " select isnull(if i_ruas is null then 
                                              isnull(nome_rua,'') 
                                           else 
                                               (select nome from bethadba.ruas 
                                                     where i_ruas = correspondencias.i_ruas) 
                                           endif,''), 
                                    isnull(if i_bairros is null then 
                                              isnull(nome_bairro,'') 
                                           else
                                              (select nome from bethadba.bairros where i_bairros = correspondencias.i_bairros) 
                                           endif,''), 
                                    isnull(cep,''), 
                                    isnull(numero,''), 
                                    isnull(complemento,''), 
                                    (if correspondencias.i_cidades is null then isnull(uf,'') else isnull((select (select sigla from bethadba.estados where estados.i_estados = cidades.i_estados) from bethadba.cidades where cidades.i_cidades = correspondencias.i_cidades),'') endif), 
                                    isnull(if i_cidades is null then 
                                              isnull(nome_cidade,'') 
                                           else 
                                              (select nome from bethadba.cidades where i_cidades = correspondencias.i_cidades) 
                                           endif,''), 
                                    isnull(bloco,''),
                                    dbf_ret_tipo_rua(i_ruas),
                                    isnull(apto ,'') 
                               from bethadba.correspondencias 
                               where i_imoveis = "+liImo;
                liRetorno = consulta(@gaConexao, 'Correspondencia', laSelect);

                 se liRetorno < 1 || !consProxima('Correspondencia') 
                    laRuaEnt    = laRuaImo;
                    laNumEnt    = laNumImo;
                    laCompEnt   = laCompImo;
                    laBaiEnt    = laBaiImo;
                    laCidEnt    = laCidEntidade;
                    laEstEnt    = laUFEnt;
                    laCepEnt    = laCepImo;
                    laBloEnt    = laBloImo;
                    laAptoEnt   = laAptoImo;
                    laTipRuaEnt = laTipRuaImo;

                senao
                    laRuaEnt    = consDados('Correspondencia',01);
                    laBaiEnt    = consDados('Correspondencia',02);
                    laCepEnt    = consDados('Correspondencia',03);
                    laNumEnt    = consDados('Correspondencia',04);
                    laCompEnt   = consDados('Correspondencia',05);
                    laEstEnt    = consDados('Correspondencia',06);
                    laCidEnt    = consDados('Correspondencia',07);
                    laBloEnt    = consDados('Correspondencia',08);
                    laTipRuaEnt = consDados('Correspondencia',09);
                    laAptoEnt   = consDados('Correspondencia',10);
                    consFecha('Correspondencia');
                    
                fimse;
            senao
                laRuaEnt    = laRuaImo;
                laNumEnt    = laNumImo;
                laCompEnt   = laCompImo;
                laBaiEnt    = laBaiImo;
                laCidEnt    = laCidEntidade;
                laEstEnt    = laUFEnt;
                laCepEnt    = laCepImo;
                laBloEnt    = laBloImo;
                laAptoEnt   = laAptoImo;
                laTipRuaEnt = laTipRuaImo;
            fimse;
        fimse;

        //Consulta Numero do Carne para o imovel
        liCarne = i;
        se tamanho(laRuaEnt) > 0
          se tamanho(retira(laNumEnt)) > 0
            laNumEnt = ', ' + laNumEnt;
          fimse;          
           laRuaEnt = laTipRuaEnt + '' + formata(retira(laRuaEnt)+laNumEnt,repete('@',50)) ;
        senao
           laRuaEnt = repete(" ",50);
        fimse;
        se tamanho(laRuaImo) > 0
            laRuaImovel = laTipRuaImo + '' + formata(retira(laRuaImo)+ ', ' + laNumImo,'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@') ;
        senao
            laRuaImovel = repete(' ',50);
        fimse;
        
        //Consulta o loteamento
        laSelect = " select nome from bethadba.loteamentos where i_loteamentos = " +liLoteamento;
        liRetorno = consulta(@gaConexao, 'Loteamento', laSelect);
        se liRetorno < 1 
            mensagem('consulta', liRetorno, 'finaliza',1);
        senao
            se consProxima('Loteamento')
                laLoteamento = consDados('Loteamento', 1);        
            senao
                laLoteamento = ' ';
            fimse;
        fimse;
        consFecha('Loteamento');                    
        
        //Montagem do Arquivo
        @gaRegistro = alfa(formata(liImo, '000000'));
        @gaRegistro += formata(laInscAnt,repete('@',15));        
        @gaRegistro += formata(alfa(formata(liPessoa,'######')) +' - ' + retira(laNome),repete('@',70));
        
        se ((tamanho(lacpf) == 0) && (tamanho(lacnpj) == 0))
              @gaRegistro += formata(' ',repete('@',50));
        senao
            se (tamanho(lacpf) > 0)
                @gaRegistro += 'CPF: ' + formata(lacpf,'@@@.@@@.@@@-@@') + repete(' ',31);
            senao
                se (tamanho(lacnpj) > 0)
                    @gaRegistro += 'CNPJ: ' + formata(lacnpj,'@@.@@@.@@@/@@@@-@@') + repete(' ',26);
                fimse;
            fimse;
        fimse;
        
        @gaRegistro += formata(retira(laInscricao),repete('@',30));
        @gaRegistro += formata(retira(laRuaEnt),repete('@',50));
        @gaRegistro += formata(retira(laCompEnt),repete('@',30));
        @gaRegistro += formata(retira(laBloEnt),'@@@@@@');
        @gaRegistro += formata(retira(laAptoEnt),'@@@@@@');
        @gaRegistro += formata(retira(laBaiEnt),repete('@',20));
        @gaRegistro += formata(retira(laCidEnt),repete('@',30));
        @gaRegistro += formata(retira(laEstEnt),'@@');
        @gaRegistro += formata(laCepEnt,'@@@@@@@@');
        @gaRegistro += formata(retira(laRuaImovel),repete('@',50));
        @gaRegistro += formata(retira(laCompImo),repete('@',30));
        @gaRegistro += formata(retira(laBaiImo),repete('@',20));
        @gaRegistro += formata(laCepImo,'@@@@@@@@');
               
        se ( liLoteamento == 0 )
            @gaRegistro += repete(' ',6);
        senao
            @gaRegistro += alfa(formata(liLoteamento,'000000'));
        fimse;
        
        @gaRegistro += formata(retira(laLoteamento),repete('@',40));
        @gaRegistro += formata(retira(laBloImo),'@@@@@@');
        @gaRegistro += formata(retira(laAptoImo),'@@@@@@');
        @gaRegistro += formata(retira(laLote),'@@@@@@');
        @gaRegistro += formata(retira(laQuadra),'@@@@@@');
        @gaRegistro += formata('Bento Gonçalves - RS',repete('@',20));    
              
        //Geração da Imagem Cadastral  
        j = 0;
        para j = 1 ate 8 
            se (vetorDados('Bci',j) == 0 )
                @gaRegistro += repete(' ',30);
            senao
                liItemBci = vetorDados('Bci',j);
                se (direita(alfa(liItemBci),2) == '00')
                    liItem = numero(formata(liItemBci / 100,'0000000000000'));
                    laSelect = " SELECT descricao FROM bethadba.bci, bethadba.opcoes_bci opc WHERE bci.ano = opc.ano 
                    AND bci.ano = dbf_ano_base(" +liImo+ "," +liAno+ "," +liItemBci+ ", 'opcoes_bci' ) AND bci.i_item = opc.i_item and byte_substr(opc.i_item,-3,-4) = "
                    +liItem+ "AND opc.i_imoveis = " +liImo;
                    liRetorno = consulta(@gaConexao, 'Imagem', laSelect);
                    se liRetorno < 1 
                        mensagem('consulta', liRetorno, 'finaliza',1);
                    senao
                        se consProxima('Imagem')
                            laDesc = consDados('Imagem', 1);        
                        senao
                            laDesc = ' ';
                        fimse;
                    fimse;
                    consFecha('Imagem');                                             
                    @gaRegistro += formata(retira(laDesc),'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@');                
                senao
                    laSelect = "SELECT isnull(valor,0), isnull(texto,''), isnull(data_bci, today()) 
                    FROM bethadba.opcoes_bci WHERE i_imoveis = " +liImo+ " AND ano = dbf_ano_base(" +liImo+ "," +liAno+ "," +liItemBci+ ", 'opcoes_bci' ) AND i_item = " +liItemBci;
                    liRetorno = consulta(@gaConexao, 'Opcao', laSelect);
                    se liRetorno < 1 
                        mensagem('consulta', liRetorno, 'finaliza',1);
                    senao
                        se consProxima('Opcao')
                            lnValorBci = consDados('Opcao',1);
                            laDesc1 = consDados('Opcao', 2);        
                            ldData = consDados('Opcao',3);
                        senao
                            lnValorBci = 0;
                            laDesc1 = ' ';
                            ldData = data('01/01/1900');
                        fimse;
                    fimse;
                    consFecha('Opcao');                                             
                   
                    se (direita(alfa(liItemBci),2) == '99')
                        se ( lnValorBci <= 0 )
                            @gaRegistro += repete(' ',15);
                        senao
//                            @gaRegistro += formata(retira(formata(lnValorBci,'0.00')),'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@');
                            @gaRegistro += repete(' ' , 15 - tamanho(retira(formata(lnValorBci,'0.00')))) + retira(formata(lnValorBci,'0.00'));
                        fimse;
                    senao 
                        se ( direita(alfa(liItemBci),2) == '98')
                            se lnValorBci == 0
                                @gaRegistro += repete(' ',15);
                            senao
                                @gaRegistro += repete(' ' , 15 - tamanho(retira(formata(lnValorBci,'0')))) + retira(formata(lnValorBci,'0'));
                            fimse;
                        senao 
                            se (direita(alfa(liItemBci),2) == '97')
                                se ldData == data('01/01/1900')
                                    @gaRegistro += repete('',30);
                                senao
                                    @gaRegistro += repete(' ',20)+alfa(formata(ldData,'dd/MM/yyyy'));
                                fimse;
                            senao 
                                se (direita(alfa(liItemBci),2) == '96')
                                    se laDesc == ' '
                                        @gaRegistro += repete(' ',30);
                                    senao
                                        @gaRegistro += formata(laDesc1,'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@');
                                    fimse;
                                fimse;
                            fimse;
                        fimse;
                    fimse;
                fimse;
            fimse;
        fimpara;

        laSelect = "SELECT i_lanctos,
                    (if (exists(select 1 from bethadba.rec_lanctos where rec_lanctos.i_lanctos = lanctos.i_lanctos and rec_lanctos.i_isencoes is null) or 
                              exists(select 1 from bethadba.lanctos as englob key join bethadba.rec_lanctos where englob.i_lancto_prin = lanctos.i_lanctos and i_isencoes is null)) then
                         'N'
                     else 'I' endif) 
                    from bethadba.lanctos where lanctos.i_receitas = " 
                    +liReceita+ " and lanctos.ano = " +liAno+ " and i_imoveis = " +liImo+ " and simulado = 'N' and situacao = 'A' and (exists(select 1 from bethadba.rec_lanctos where rec_lanctos.i_lanctos = lanctos.i_lanctos and rec_lanctos.i_isencoes is null) or 
                              exists(select 1 from bethadba.lanctos as englob key join bethadba.rec_lanctos where englob.i_lancto_prin = lanctos.i_lanctos and i_isencoes is null))";

        liRetorno = consulta(@gaConexao, 'lanctos', laSelect);
        se liRetorno < 1 
           mensagem('consulta', liRetorno, 'finaliza',1);
        senao
            laRegAux = @gaRegistro;
            enquanto consProxima('lanctos')
                i++;
                liLancto = consDados('lanctos',1);
                laIsento = consDados('lanctos',2);
                //@gaRegistro = alfa(formata(liLancto,'00000000')) + subAlfa(@gaRegistro,8,tamanho(@gaRegistro) - 8);
                

// Verifica quais parcelas devem ser geradas
se @gaUnica == '1 - Únicas'
    //Consulta parcelas da receita
    laSelect = "SELECT parcela, config FROM bethadba.parcelas WHERE i_receitas = " +liReceita+ " AND ano = " +liAno+ " and parcelas.unica = 'S' and 
                                                        parcelas.config in (select config_lanctos.i_config 
                                                                            from bethadba.config_lanctos where parcelas.config = config_lanctos.i_config and
                                                                                                               config_lanctos.i_lanctos = " + liLancto + ")    
               ORDER BY parcela, data_vcto, config";                                           
fimse;

se @gaUnica == '2 - Não Únicas'
    //Consulta parcelas da receita
    laSelect = "SELECT parcela, config FROM bethadba.parcelas WHERE i_receitas = " +liReceita+ " AND ano = " +liAno+ " and parcelas.unica ='N' and 
                                                        parcelas.config in (select config_lanctos.i_config 
                                                                            from bethadba.config_lanctos where parcelas.config = config_lanctos.i_config and
                                                                                                               config_lanctos.i_lanctos = " + liLancto + ")    
               ORDER BY parcela, data_vcto, config";
fimse;

se @gaUnica == '3 - Todas'
    //Consulta parcelas da receita
    laSelect = "SELECT parcela, config FROM bethadba.parcelas WHERE i_receitas = " +liReceita+ " AND ano = " +liAno+ " and 
                                                        parcelas.config in (select config_lanctos.i_config 
                                                                            from bethadba.config_lanctos where parcelas.config = config_lanctos.i_config and
                                                                                                               config_lanctos.i_lanctos = " + liLancto + ")    
               ORDER BY parcela, data_vcto, config";
fimse;

      
liRetorno = consulta(@gaConexao, 'Parcelas', laSelect);
se liRetorno < 1 
        mensagem('consulta', liRetorno, 'finaliza',1);
senao
    liQtdeParc = 0;
    enquanto consProxima('Parcelas')
        liQtdeParc++;
        vetor("Parcela", liQtdeParc, consDados('Parcelas',1));
        vetor("Config", liQtdeParc, consDados('Parcelas',2));
    fimenquanto;
fimse;
consFecha('Parcelas');                                         
                  
               para j = 1 ate 5

                    se j > liQtdeParc
                       @gaRegistro += repete(' ',457);
                    senao

                        liParcela = vetorDados('Parcela',j);
                        liConfig  = vetorDados('Config',j);
                      
                       
                        laSelect = "SELECT debitos.i_debitos, debitos.parcela, debitos.data_vcto, debitos.unica, debitos.i_moedas, debitos.i_config
                        FROM bethadba.debitos, bethadba.lanctos where debitos.flag = 'A' and debitos.i_lanctos = lanctos.i_lanctos 
                        AND lanctos.i_lanctos = " + liLancto + " and debitos.i_config = " + liConfig +
                        "and debitos.parcela = " + liParcela + "AND (exists( select 1 from bethadba.rec_lanctos, bethadba.rec_debitos 
                                           where rec_debitos.i_debitos = debitos.i_debitos and 
                                           lanctos.i_lanctos = rec_lanctos.i_lanctos and 
                                           rec_lanctos.i_isencoes is null and 
                                           rec_debitos.i_receitas = rec_lanctos.i_receitas) or 
                                           exists( select 1 from bethadba.rec_lanctos recLanEng key join bethadba.lanctos as lancEng, bethadba.rec_debitos 
                                           where lancEng.i_lancto_prin = lanctos.i_lanctos and 
                                                 recLanEng.i_receitas  = rec_debitos.i_receitas and 
                                                 rec_debitos.i_debitos = debitos.i_debitos and recLanEng.i_isencoes is null)) order by debitos.parcela, debitos.data_vcto, debitos.i_config";

                        liRetorno = consulta(@gaConexao, 'Debito1', laSelect);
                        liDebito = 0;
                        se liRetorno < 1 
                            mensagem('consulta', liRetorno, 'finaliza',1);
                        senao
                            se consProxima('Debito1')
                                liDebito = consDados('Debito1',1);
                                liParcela = consDados('Debito1',2);
                                ldVcto = consDados('Debito1',3);
                                laUnica = consDados('Debito1',4);
                                liMoeOrig = consDados('Debito1',5);
                                liConfig = consDados('Debito1',6);
                      
                            senao
                                liDebito = 0;
                                liParcela = 0;
                                ldVcto = data('01/01/1900');
                                laUnica = ' ';
                                liMoeOrig = 0;
                                liConfig = 0;
                            fimse;
                        fimse;            
                        consFecha('Debito1');                      
                        
                        laSelect = "SELECT isnull(sum(rec_debitos.valor_gerado - isnull(rec_debitos.valor_desc,0)),0), 
                                           isnull(sum(rec_debitos.valor_gerado),0), 
                                           isnull(sum(rec_debitos.valor_desc),0)
                        FROM bethadba.rec_debitos key join bethadba.debitos, bethadba.lanctos where debitos.flag = 'A' and 
                        debitos.i_lanctos = lanctos.i_lanctos AND lanctos.i_lanctos = " + liLancto + " and debitos.i_config = " + liConfig + 
                        "and debitos.parcela = " + liParcela + " AND (exists( select 1 from bethadba.rec_lanctos where lanctos.i_lanctos = rec_lanctos.i_lanctos and rec_lanctos.i_isencoes is null and rec_lanctos.i_receitas = rec_debitos.i_receitas) or 
                                           exists( select 1 from bethadba.rec_lanctos recLanEng key join bethadba.lanctos as lancEng 
                                           where lancEng.i_lancto_prin = lanctos.i_lanctos 
                                           and recLanEng.i_receitas = rec_debitos.i_receitas and recLanEng.i_isencoes is null))";
                                           

                        liRetorno = consulta(@gaConexao, 'Debito', laSelect);
                        se liRetorno < 1 
                            mensagem('consulta', liRetorno, 'finaliza',1);
                        senao
                            se consProxima('Debito')
                                lnTotGerado = consDados('Debito',1);
                                lnTotGeradoMenosDesc = consDados('Debito',2);
                                lnTotGeradoDesc = consDados('Debito',3);
                            senao
                                lnTotGerado = 0;
                            fimse;
                        fimse;
                        consFecha('Debito');
                           
                      laSelect = "SELECT nome_parc from bethadba.parcelas
                                  where parcelas.parcela = " + liParcela + " and  parcelas.ano = " + liAno + " and parcelas.config = " + liConfig + " and
                                   parcelas.i_receitas = " + liReceita; 
                     
                      liRetorno = consulta(@gaConexao, 'NParcelas', laSelect);
                      se liRetorno < 1 
                          mensagem('consulta', liRetorno, 'finaliza',1);
                      senao
                        se consProxima('NParcelas')
                           laNomeParc = consDados('NParcelas',1);
                        fimse;
                      fimse;           
                                                                                                             
                        se liDebito == 0
                            @gaRegistro += repete(' ',462);
                        senao
                            @gaRegistro += alfa(formata(liConfig,'00')) + alfa(formata(liParcela,'00')) + 
                                           alfa(formata(laNomeParc,'@@@@@')) +  alfa(formata(ldVcto,'dd/MM/yyyy'));
                            @gaRegistro += repete(' ',15 - tamanho(retira(formata(lnTotGerado,'0.00'))))+ retira(formata(lnTotGerado,'0.00'));
                            se j == 1
                               @gaRegistro += repete(' ',15 - tamanho(retira(formata(lnTotGeradoMenosDesc,'0.00'))))+ retira(formata(lnTotGeradoMenosDesc,'0.00'));
                               @gaRegistro += repete(' ',15 - tamanho(retira(formata(lnTotGeradoDesc,'0.00'))))+ retira(formata(lnTotGeradoDesc,'0.00'));
                            fimse;
                            
//                            mostraln(@gaRegistro);



                            laSelect = " select cast(dbf_ret_num_baixa( 1, 1, " +liImo+ " , " +liAno+ " , " +liReceita+ " , " 
                                   +liParcela+ " , " +liConfig+ ", 'N' ) as integer) from dummy ";
                            liRetorno = consulta(@gaConexao, 'Baixa', laSelect);
                            se liRetorno < 1 
                                mensagem('consulta', liRetorno, 'finaliza',1);
                            senao
                                se consProxima('Baixa')
                                    liNumBaixa = consDados('Baixa', 1);        
                                                                     
                                fimse;
                            fimse;
                            consFecha('Baixa');
                            
                            liMaxRec = 0;                    
                            laSelect = "select isnull(rec_debitos.valor_gerado,0), isnull(rec_debitos.valor_desc,0), rec_debitos.i_receitas from bethadba.rec_debitos key join bethadba.debitos 
                             where debitos.i_debitos = "+liDebito + " and 
                                                (exists( select 1 from bethadba.rec_lanctos where debitos.i_lanctos = rec_lanctos.i_lanctos and rec_lanctos.i_isencoes is null and rec_lanctos.i_receitas = rec_debitos.i_receitas) or 
                                                 exists( select 1 from bethadba.rec_lanctos recLanEng key join bethadba.lanctos as lancEng 
                                                 where lancEng.i_lancto_prin = debitos.i_lanctos 
                                                 and recLanEng.i_receitas = rec_debitos.i_receitas and recLanEng.i_isencoes is null))";
                            liRetorno = consulta(@gaConexao, 'Complemento', laSelect);
                            
                            // Trecho para contar quantas receitas há para o imovel
                            laSelectCount = "select count() from bethadba.rec_debitos key join bethadba.debitos 
                             where debitos.i_debitos = "+liDebito + " and 
                                                (exists( select 1 from bethadba.rec_lanctos where debitos.i_lanctos = rec_lanctos.i_lanctos and rec_lanctos.i_isencoes is null and rec_lanctos.i_receitas = rec_debitos.i_receitas) or 
                                                 exists( select 1 from bethadba.rec_lanctos recLanEng key join bethadba.lanctos as lancEng 
                                                 where lancEng.i_lancto_prin = debitos.i_lanctos 
                                                 and recLanEng.i_receitas = rec_debitos.i_receitas and recLanEng.i_isencoes is null))";
                            liRetornoCount = consulta(@gaConexao, 'Complemento_count', laSelectCount);
                            contaSubRec = consDados('Complemento_count', 1);
                            //fim
                            
                            
                            se laIsento == 'N'
                                laSelect = "select dbf_ret_montagem_nn_cb_rn( 'C', " +@giConvenio+ " , '" +ldVcto+ "' , " +liParcela+ " , 
                                '" +laUnica+ "' , " +liAno+ " , " +liNumBaixa+ " , " +lnTotGerado+ " , " +liReceita+ " ) from dummy "; 
                                liRetorno = consulta(@gaConexao, 'Barra', laSelect);
                                se liRetorno < 1 
                                    mensagem('consulta', liRetorno, 'finaliza',1);
                                senao
                                    se consProxima('Barra')
                                        laBarra = consDados('Barra', 1);
                                    fimse;
                                fimse;
                                consFecha('Barra');

                                laSelect = " select dbf_ret_montagem_nn_cb_rn( 'R', " +@giConvenio+ " , '" +ldVcto+ "' , " +liParcela+ " , 
                                '" +laUnica+ "' , " +liAno+ " , " +liNumBaixa+ " , " +lnTotGerado+ " , " +liReceita+ " ) from dummy "; 
                                liRetorno = consulta(@gaConexao, 'RepNum', laSelect);
                                se liRetorno < 1 
                                    mensagem('consulta', liRetorno, 'finaliza',1);
                                senao
                                    se consProxima('RepNum')
                                        laRepNum = consDados('RepNum', 1);        
                                    fimse;
                                fimse;
                                consFecha('RepNum');
                            fimse;
                            @gaRegistro += formata(laBarra,'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@');
                            @gaRegistro += repete(' ', 5) + formata(laRepNum,'@@@@@@@@@@@ @  @@@@@@@@@@@ @  @@@@@@@@@@@ @  @@@@@@@@@@@ @');
                            @gaRegistro += repete (' ',5)+ formata(liNumBaixa,'00000000');
                        fimse;
                            se liRetorno < 1 
                                mensagem('consulta', liRetorno, 'finaliza',1);
                            senao
                                enquanto consProxima('Complemento')
                                    lnValorGer = consDados('Complemento', 1);        
                                    lnValorDesc = consDados('Complemento', 2);                                    
                                    liSubReceita = consDados('Complemento',3);
                                    lnValorBci = 0;
                                    
                                    se (liSubReceita == 101)
                                    
                                       // Área Verde - Desconto Área Verde Item 458/99
                                       laSelect = "SELECT isnull(valor,0) FROM bethadba.opcoes_bci 
                                                    WHERE i_imoveis = " +liImo+ " AND 
                                                          ano = dbf_ano_base(" +liImo+ "," +liAno+ ",45899, 'opcoes_bci' ) AND i_item = 45899";
                                       liRetorno = consulta(@gaConexao, 'Verde', laSelect);
                                       se liRetorno < 1 
                                         mensagem('consulta', liRetorno, 'finaliza',1);
                                       senao
                                         se consProxima('Verde')
                                           lnValorBci = consDados('Verde',1);
                                         senao
                                           lnValorBci = 0;
                                         fimse;
                                       fimse;
                                      consFecha('Verde');
                                    senao 
                                      se (liSubReceita == 102)
                                      // Área Verde - Desconto Área Verde Item 459/99
                                       laSelect = "SELECT isnull(valor,0) FROM bethadba.opcoes_bci 
                                                    WHERE i_imoveis = " +liImo+ " AND 
                                                          ano = dbf_ano_base(" +liImo+ "," +liAno+ ",45999, 'opcoes_bci' ) AND i_item = 45999";
                                       liRetorno = consulta(@gaConexao, 'Verde', laSelect);
                                       se liRetorno < 1 
                                         mensagem('consulta', liRetorno, 'finaliza',1);
                                       senao
                                         se consProxima('Verde')
                                           lnValorBci = consDados('Verde',1);
                                         senao
                                           lnValorBci = 0;
                                         fimse;
                                       fimse;
                                      consFecha('Verde');                                         
                                      fimse; 
                                    fimse;
                                    
                                    lnValorGer = lnValorGer + lnValorBci;
                                    //INICIO
                                    //trecho aletardo em para que as sub-receitas referentes a Serviços Urbanos fossem agrupadas em um item somente                                    
                                    se liMaxRec < 6
                                        se liSubReceita < 103
                                            laSelect = "select if length(nome) > 35 then abreviatura else nome endif from bethadba.receitas where i_receitas = " +liSubReceita;
                                            liRetorno = consulta(@gaConexao, 'DescReceita', laSelect);
                                            se liRetorno < 1 
                                                mensagem('consulta', liRetorno, 'finaliza',1);
                                            senao
                                                se consProxima('DescReceita')
                                                    laDescReceita = consDados('DescReceita',1);
                                                fimse;
                                            fimse;
                                            consFecha('DescReceita');
                                            liMaxRec++;
                                            contaSubRec --;
                                            @gaRegistro += formata(laDescReceita,repete('@',25));
                                            @gaRegistro += repete(' ',15 - tamanho(retira(formata(lnValorGer,'0.00'))))+ retira(formata(lnValorGer,'0.00'));
                                        senao
                                            contaSubRec --;
                                            lnValorGerAcu += lnValorGer;
                                            se contaSubRec == 0
                                               @gaRegistro += formata('Serviços Urbanos',repete('@',25));
                                               @gaRegistro += repete(' ',15 - tamanho(retira(formata(lnValorGerAcu,'0.00'))))+ retira(formata(lnValorGerAcu,'0.00'));
                                               liMaxRec++;
                                               lnValorGerAcu = 0;
                                            fimse;
                                        fimse;
                                        
                                    fimse;
                                fimenquanto;
                                consFecha('Complemento');
                          fimse;
                          se liMaxRec < 6
                               @gaRegistro += repete( ' ', (( 6 - liMaxRec ) * 40) );
                          fimse;  //fim das alteraçoes referentes a união das sub-receitas de serviços urbanos
                   fimse;                
               fimpara;
                    // Área Verde - Desconto Área Verde Item 460/99
                    laSelect = "SELECT isnull(valor,0) FROM bethadba.opcoes_bci 
                                WHERE i_imoveis = " +liImo+ " AND 
                                      ano = dbf_ano_base(" +liImo+ "," +liAno+ ",46099, 'opcoes_bci' ) AND i_item = 46099";
                    liRetorno = consulta(@gaConexao, 'Verde', laSelect);
                    se liRetorno < 1 
                        mensagem('consulta', liRetorno, 'finaliza',1);
                    senao
                      se consProxima('Verde')
                        lnValorBci = consDados('Verde',1);
                      senao
                        lnValorBci = 0;
                      fimse;
                    fimse;
                    consFecha('Verde'); 

                    @gaRegistro += repete(' ',15 - tamanho(retira(formata(lnValorBci,'0.00'))))+ retira(formata(lnValorBci,'0.00'));
                    
                    //INÍCIO MENSAGEM DE VERIFICAÇÃO DE DÉBITOS 
                    laSelect = "SELECT count() FROM 
                                	bethadba.dividas div
                                where 
                                	div.data_vcto <= '2012-12-31' and 
                                	div.situacao = 'A' and
                                	div.i_receitas in (SELECT rec.i_receitas FROM bethadba.receitas rec where rec.tipo_receita = 1 and rec.i_receitas like '%00') and
                                	div.i_refer = "+liImo;
                    liRetorno = consulta(@gaConexao,'divida',laSelect);
                    se liRetorno > 0
                        se consProxima('divida')
                            se consDados('divida',1) > 0
                                mostraln('ATENÇÃO! EXISTEM DÉBITOS ANTERIORES!');
                                laMensagem = 'ATENÇÃO! EXISTEM DÉBITOS ANTERIORES!';
                                @gaRegistro += repete(' ',120 - tamanho(laMensagem))+ laMensagem;
                            senao
                                laSelect = "SELECT cont() FROM 
	                                        bethadba.acordos_parcelas ap,
                                            	bethadba.acordos_dividas adiv,
                                            	bethadba.dividas div
                                            where
                                            	ap.i_acordos = adiv.i_acordos and
                                            	adiv.i_dividas = div.i_dividas and
                                            	div.situacao = 'P' and
                                            	div.i_receitas in (SELECT rec.i_receitas FROM bethadba.receitas rec where rec.tipo_receita = 1 and rec.i_receitas like '%00')and
                                        	ap.flag = 'A' and
                                        	ap.data_vcto <= '2012-12-31' and
                                        	div.i_refer =" + liImo;
                                  liRetorno = consulta(@gaConexao,'acordos',laSelect);
                                  se liRetorno > 0
                                      se consProxima('acordos')
                                          se consDados('acordos',1) > 0                                                              
                                              mostraln('ATENÇÃO! EXISTEM DÉBITOS ANTERIORES!');
                                              laMensagem = 'ATENÇÃO! EXISTEM DÉBITOS ANTERIORES!';
                                              @gaRegistro += repete(' ',120 - tamanho(laMensagem))+ laMensagem;
                                          senao
                                              mostraln('VOCÊ É UM CIDADÃO CONSCIENTE! CONTINUE PAGANDO EM DIA SEU IPTU E AJUDE A FAZER BENTO GONÇALVES UMA CIDADE AINDA MELHOR');
                                              laMensagem = 'VOCÊ É UM CIDADÃO CONSCIENTE! CONTINUE PAGANDO EM DIA SEU IPTU E AJUDE A FAZER BENTO GONÇALVES UMA CIDADE AINDA MELHOR';
                                              @gaRegistro += repete(' ',120 - tamanho(laMensagem))+ laMensagem;
                                          fimse;
                                      fimse;                                      
                                  fimse;
                            fimse;
                        fimse;
                    fimse;
                    consFecha('divida');
                    consFecha('acordos');
                    //FIM MENSAGEM DE VERIFICAÇÃO DE DÉBITOS                                  
               escreveArquivo(@gaCaminho,@gaRegistro,true); 
            fimenquanto;
       fimse;
     fimenquanto;
fimse;
consFecha('Imoveis'); 
consulta(@gaConexao, 'Agora', sqldthora);
mostraln('Processamento terminado: ' + formata(consDados('Agora', 1), 'dd/MM/yyyy hh:mm:ss'));
consFecha('Agora');
mostraln('Arquivo Gerado com sucesso!');
mostraln('Total de registros do arquivo: ' + jj);